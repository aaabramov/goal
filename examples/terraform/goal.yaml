# This example combines two `goal` features:
# 1. Environmental executions: `goal run tf-plan --on dev`
# 2. Built-in `terraform_workspace` assertions upon execution
#    to prevent accidental runs on wrong environment.
#
# NOTE: Your can list available `terraform` workspaces with `terraform workspace list`
#
# Usage:
#   goal run plan --on dev
#   goal run plan --on stage
#
#   goal run apply --on dev
#   goal run apply --on stage

plan:
  envs:
    dev:
      desc: Terraform plan on dev
      assert:
        - terraform_workspace: dev # Checks whether selected terraform workspace is "dev"
      cmd: terraform
      args:
        - plan
        - -var-file
        - vars/dev.tfvars
    stage:
      desc: Terraform plan on stage
      assert:
        - terraform_workspace: stage # Checks whether selected terraform workspace is "stage"
      cmd: terraform
      args:
        - plan
        - -var-file
        - vars/stage.tfvars

apply:
  envs:
    dev:
      desc: Terraform apply on dev
      assert:
        - terraform_workspace: dev # Checks whether selected terraform workspace is "dev"
      cmd: terraform
      args:
        - apply
        - -var-file
        - vars/dev.tfvars
    stage:
      desc: Terraform apply on stage
      assert:
        - terraform_workspace: stage # Checks whether selected terraform workspace is "stage"
      cmd: terraform
      args:
        - apply
        - -var-file
        - vars/stage.tfvars
